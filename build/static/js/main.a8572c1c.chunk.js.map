{"version":3,"sources":["components/BudgetForm/actionBudgetForm.js","components/BudgetForm/reducerBudgetForm.js","components/Expenses/actionExpenses.js","components/Expenses/reducerExpenses.js","redux/store.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm/BudgetForm.js","components/BudgetForm/containerBudgetForm.js","components/Expenses/ExpenseForm.js","components/Expenses/containerExpenseForm.js","components/Expenses/ExpensesTable.js","components/Expenses/containerExpensesTable.js","redux/selectors.js","components/Stat.js","components/Values.js","components/App.js","index.js"],"names":["Type","reducerBudgetForm","state","arguments","length","undefined","action","type","payload","reducerExpenses","_ref","concat","Object","toConsumableArray","filter","item","id","rootReducer","combineReducers","budget","expenses","store","createStore","devToolsEnhancer","StyledForm","styled","form","_templateObject","Form","_ref$onSubmit","onSubmit","children","react_default","a","createElement","StyledLabel","label","Label_templateObject","props","customStyles","Label","StyledInput","input","Input_templateObject","Input","_ref$type","_ref$value","value","_ref$onChange","onChange","_ref$name","name","StyledButton","button","Button_templateObject","Button","_ref$label","_ref$onClick","onClick","BudgetForm","handleChange","e","_this","setState","target","handleSubmit","preventDefault","addBudget","this","shared_Form","shared_Label","shared_Input","placeholder","shared_Button","Component","connect","dispatch","Number","ExpenseForm","amount","defineProperty","addExpense","objectSpread","_this$state","shortid","Table","table","ExpensesTable_templateObject","ExpensesTable","_ref$items","items","removeExpense","map","_ref2","key","calculateTotalExpenses","reduce","acc","calculateBalance","Container","div","Stat_templateObject","isPositive","p","_templateObject2","Value","_templateObject3","Stat","Stat_Label","section","Values_templateObject","selectors","balance","Values_Container","components_Stat","App_templateObject","App","expense","App_Container","containerBudgetForm","components_Values","containerExpenseForm","containerExpensesTable","onRemove","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a8572c1c.chunk.js","sourcesContent":["export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n};\n\nexport const addBudget = budget => ({\n  type: Type.ADD_BUDGET,\n  payload: Number(budget),\n});\n","import { Type } from './actionBudgetForm';\n\nconst reducerBudgetForm = (state = 0, action) => {\n  switch (action.type) {\n    case Type.ADD_BUDGET: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerBudgetForm;\n","import shortid from 'shortid';\n\nexport const Type = {\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addExpense = ({ amount, name }) => ({\n  type: Type.ADD_EXPENSE,\n  payload: { id: shortid(), amount: Number(amount), name },\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: id,\n});\n","import { Type } from './actionExpenses';\n\nconst reducerExpenses = (state = null, { type, payload }) => {\n  switch (type) {\n    case Type.ADD_EXPENSE: {\n      return [...state, payload];\n    }\n    case Type.REMOVE_EXPENSE: {\n      return state.filter(item => item.id !== payload);\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducerExpenses;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport reducerBudgetForm from '../components/BudgetForm/reducerBudgetForm';\nimport reducerExpenses from '../components/Expenses/reducerExpenses';\n\nconst initialState = {\n  budget: 0,\n  expenses: [],\n};\n\nconst rootReducer = combineReducers({\n  budget: reducerBudgetForm,\n  expenses: reducerExpenses,\n});\n\nconst store = createStore(rootReducer, initialState, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  children: propTypes.array.isRequired,\n  onSubmit: propTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: propTypes.oneOfType([\n    propTypes.arrayOf(propTypes.node),\n    propTypes.node,\n  ]).isRequired,\n  customStyles: propTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  type: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n  name: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  label: propTypes.string.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass BudgetForm extends Component {\n  state = { budget: '' };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addBudget(this.state.budget);\n    this.setState({ budget: '' });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={budget}\n            onChange={this.handleChange}\n            name=\"budget\"\n            placeholder={budget}\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  addBudget: propTypes.func.isRequired,\n};\n\nexport default BudgetForm;\n","import { connect } from 'react-redux';\nimport { addBudget } from './actionBudgetForm';\nimport BudgetForm from './BudgetForm';\n\nconst mapDispatchToProps = dispatch => ({\n  addBudget: budget => dispatch(addBudget(budget)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.addExpense({\n      ...this.state,\n    });\n\n    this.setState({ name: '', amount: '' });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  addExpense: propTypes.func.isRequired,\n};\n\nexport default ExpenseForm;\n","import { connect } from 'react-redux';\nimport { addExpense } from './actionExpenses';\nimport ExpenseForm from './ExpenseForm';\n\nconst mapDispatchToProps = dispatch => ({\n  addExpense: ({ name, amount }) => dispatch(addExpense({ name, amount })),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Button from '../shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], removeExpense }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => removeExpense(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      amount: propTypes.number.isRequired,\n    }),\n  ).isRequired,\n  removeExpense: propTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","import { connect } from 'react-redux';\nimport { removeExpense } from './actionExpenses';\nimport ExpensesTable from './ExpensesTable';\n\nconst mapStateToProps = state => ({\n  items: state.expenses,\n});\n\nconst mapDispatchtToProps = dispatch => ({\n  removeExpense: id => dispatch(removeExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchtToProps,\n)(ExpensesTable);\n","export const calculateTotalExpenses = state => {\n  return state.expenses.reduce((acc, value) => acc + value.amount, 0);\n};\n\nexport const calculateBalance = state =>\n  state.budget - calculateTotalExpenses(state);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.propTypes = {\n  label: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n};\n\nexport default Stat;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport * as selectors from '../redux/selectors';\nimport Stat from './Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nconst mapStateToProps = state => ({\n  budget: state.budget,\n  expenses: selectors.calculateTotalExpenses(state),\n  balance: selectors.calculateBalance(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Values);\n\nValues.propTypes = {\n  budget: propTypes.number.isRequired,\n  expenses: propTypes.number.isRequired,\n  balance: propTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport BudgetForm from './BudgetForm/containerBudgetForm';\nimport ExpenseForm from './Expenses/containerExpenseForm';\nimport ExpensesTable from './Expenses/containerExpensesTable';\nimport Values from './Values';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nclass App extends Component {\n  removeExpense = id => {\n    this.setState(state => ({\n      expenses: state.expenses.filter(expense => expense.id !== id),\n    }));\n  };\n\n  render() {\n    const { expenses } = this.props;\n\n    return (\n      <Container>\n        <BudgetForm />\n        <Values />\n        <ExpenseForm />\n        {expenses.length > 0 && (\n          <ExpensesTable items={expenses} onRemove={this.removeExpense} />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.expenses,\n});\n\nApp.propTypes = {\n  expenses: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      amount: propTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}